resources:
  - name: dbp_repo
    type: GitRepo
    configuration:
      gitProvider: myGithub                       # <-- replace with your integration
      path: jfrog/jfrog-pipelines-docker-sample    # <-- replace with your repository name
      branches:
        include: master

  - name: dbp_image
    type: Image
    configuration:
      registry: myArtifactory                                # <-- replace with your artifactory integration
      sourceRepository: quickstarts-docker-local               # <-- required if registry is Artifactory
      imageName: pipelines.jfrog.io/quickstarts-docker-local/dbp  # < -- replace with your image path and name
      imageTag: latest
      autoPull: true
      
  - name: dbp_build_info
    type: BuildInfo
    configuration:
      sourceArtifactory: myArtifactory
      buildName: dbp_build
      buildNumber: 1    

  - name: dbp_promoted_build_info
    type: BuildInfo
    configuration:
      sourceArtifactory: myArtifactory
      buildName: dbp_build
      buildNumber: 1
      

pipelines:
  - name: Docker_Quickstart
    configuration:
      jfrogCliVersion: 2  
    steps:
      - name: docker_build
        type: DockerBuild
        configuration:
          affinityGroup: dbp_group
          dockerFileLocation: .
          dockerFileName: Dockerfile
          dockerImageName: pipelines.jfrog.io/quickstarts-docker-local/dbp  # replace with your image path and name
          dockerImageTag: ${run_number}
          inputResources:
            - name: dbp_repo
          integrations:
            - name: myArtifactory                            # <-- replace with your artifactory integration
        execution:
          onStart:
              # - msg="Run description updated from step $step_id"
              # - update_run_description "$msg"  
              - update_run_description "DockerBuild native step performs a build to produce a Docker image"

      - name: docker_push
        type: DockerPush
        configuration:
          affinityGroup: dbp_group
          targetRepository: quickstarts-target-local
          integrations:
            - name: myArtifactory                            # <-- replace with your artifactory integration
          inputSteps:
            - name: docker_build
          outputResources:
            - name: dbp_image
        execution:
          onStart: 
              - update_run_description "DockerPush native step pushes a Docker Image to a Docker registry"            

      - name: publish_dbp_build
        type: PublishBuildInfo
        configuration:
          inputSteps:
            - name: docker_push
          outputResources:
            - name: dbp_build_info
        execution:
          onStart: 
              - update_run_description "PublishBuildInfo step publishes BuildInfo to Artifactory"            

      - name: promote_dbp_build
        type: PromoteBuild
        configuration:
          targetRepository: quickstarts-target-local
          integrations:
            - name: myArtifactory
          inputResources:
            - name: dbp_build_info
          outputResources:
            - name: dbp_promoted_build_info
        execution:
          onStart: 
              - update_run_description "PromoteBuild native step promotes a BuildInfo and moves/copies related artifacts"
